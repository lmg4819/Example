//
//  Capture23.m
//  Example0
//
//  Created by lmg on 2018/10/16.
//  Copyright © 2018 lmg. All rights reserved.
//

#import "Capture23.h"

@implementation Capture23
/*
 委托模式的编程设计模式来实现对象间的通信，委托模式的主旨是：
 定义一套接口，某对象若想接受另一个对象的委托，则需遵从此接口，以便成为其委托对象。“另一个对象”则可以给其委托对象回传一些消息，也可以在发生相关事件时通知委托对象。
 
 在相关方法要调用很多次时，需要进行响应能力缓存优化：（Demo见23）
 如果要频繁通过数据源协议从数据源中获取多份相互独立的数据，那么这项优化技术极有可能
会提高程序效率。
 
 -----------------------------------------------------------------
 //总结
 -----------------------------------------------------------------
 1.委托模式为对象提供了一套接口，使其可由此将相关事件告知其他对象。
 2.将委托对象应该支持的接口定义成协议，在协议中把可能需要处理的事件定义成方法。
 3.当某对象需要从另一个对象中获取数据时，可以使用委托模式。这种情景下，这种模式亦成为数据源模式。
 4.若有必要，可实现含有位段的结构体，将委托对象是否能响应方法这一信息缓存在其中。
 */
@end
